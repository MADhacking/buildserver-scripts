#! /bin/bash

function helpscreen
{
	echo "Usage: ${CMDNAME} [OPTION]..."
	echo "Automatically updates all build-spaces listed in ${CFGFILE}"
	echo
	echo "  -p, --pretend                  do not perform any actions but list the"
	echo "                                 commands which would be executed"
}

# Init global vars
CFGFILE=/etc/buildspaces
CMDNAME=$(basename ${0})

# Process command line switches
while (( $# > 0 ))
do
	case $1 in
	    -p|--pretend)
			PRETEND=1
			shift 1
	    ;;
				
		*)
			helpscreen
			shift 1
			exit
		;;
	esac
done

# If the config file exists and we can read it do so, otherwise complain and quit
[[ ! -r ${CFGFILE} ]] && echo "ERROR: Unable to read config file at ${CFGFILE}" >&2 && exit 1 
source ${CFGFILE}

# Check config
[[ -z ${BUILDSPACEROOT} ]] && echo "ERROR: No BUILDSPACEROOT set in ${CFGFILE}" >&2 && exit 2
[[ -z ${BUILDSPACESXX} && -z ${BUILDSPACES32} ]] \
	 && echo "ERROR: No BUILDSPACESXX or BUILDSPACES32 set in ${CFGFILE}" >&2 && exit 2

# Execute update-buildspace for all XXbit buildspaces
if [[ -n ${BUILDSPACESXX} ]]; then
	for BS in ${BUILDSPACESXX}; do
		UDC="chroot ${BUILDSPACEROOT}/${BS} /usr/bin/update-buildspace"
		[[ -n ${PRETEND} ]] && echo ${UDC} || ${UDC}
	done
fi

# Execute update-buildspace for all 32bit buildspaces
if [[ -n ${BUILDSPACES32} ]]; then
	for BS in ${BUILDSPACES32}; do
		UDC="linux32 chroot ${BUILDSPACEROOT}/${BS} /usr/bin/update-buildspace"
		[[ -n ${PRETEND} ]] && echo ${UDC} || ${UDC}
	done
fi
